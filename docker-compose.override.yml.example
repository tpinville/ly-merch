# =================================
# Docker Compose Override Example
# =================================
# Copy this file to docker-compose.override.yml and customize as needed
# This file allows developers to override default settings without modifying the main docker-compose.yml

version: '3.8'

services:
  # API service overrides
  api:
    # Override environment variables for development
    environment:
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app
    # Mount source code for hot reload
    volumes:
      - ./api:/app
      - api_cache:/app/.cache
    # Override command for development with auto-reload
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    # Add additional ports if needed
    ports:
      - "8001:8000"  # Expose on different port if needed

  # Frontend service overrides
  frontend:
    # Mount source code for hot reload
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend_cache:/app/.cache
    # Override environment for development
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8001/api
    # Override command for development
    command: npm run dev -- --host 0.0.0.0 --port 3000

  # Database service overrides
  db:
    # Add custom configuration
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --log-bin-trust-function-creators=1
    # Expose database port for external tools
    ports:
      - "3307:3306"
    # Add custom volume for development data persistence
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  # nginx service overrides (if using nginx)
  nginx:
    # Override configuration for development
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    # Add SSL certificates for HTTPS testing
    # - ./certs:/etc/nginx/certs:ro

  # Additional services for development
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes

  # pgAdmin for database management (if using PostgreSQL)
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@example.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin

  # Mailhog for email testing
  # mailhog:
  #   image: mailhog/mailhog:latest
  #   ports:
  #     - "1025:1025"  # SMTP
  #     - "8025:8025"  # Web UI

volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  api_cache:
    driver: local
  frontend_cache:
    driver: local
  # pgadmin_data:
  #   driver: local

# Networks (if custom networking is needed)
networks:
  default:
    driver: bridge